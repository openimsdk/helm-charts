name: Helm Charts CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
        contents: write
        pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1.5.0
    - name: Testing
      run: |
        sudo kubectl cluster-info
        sudo kubectl get pods -n kube-system
        echo "current-context:" $(kubectl config current-context)
        echo "environment-kubeconfig:" ${KUBECONFIG}
      continue-on-error: true

    - name: Install Helm
      uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5
      with:
        version: v3.10.1 # Also update in lint-and-test.yaml

    - name: Create Kubernetes Cluster
      run: |
        kind create cluster
        kubectl cluster-info
        kubectl create namespace openim

    - name: Install basic components
      run: |
        # ingress
        helm install ingress-nginx ./infra/ingress-nginx/ -f infra/ingress-nginx/config.yaml -n kube-system

        # nfs
        helm install nfs-subdir-external-provisioner ./infra/nfs-subdir-external-provisioner/ -f infra/nfs-subdir-external-provisioner/config.yaml -n kube-system

    - name: Install OpenIM Middleware
      run: |
        # Install MySQL
        helm install my-release oci://registry-1.docker.io/bitnamicharts/mysql -f infra/mysql-config.yaml -n openim --create-namespace

        # Install Kafka
        helm install im-kafka infra/kafka -f infra/kafka-config.yaml -n openim --create-namespace

        # Install MinIO
        helm install im-minio infra/minio -f infra/minio-config.yaml -n openim --create-namespace

        # Install MongoDB
        helm install im-mongodb infra/mongodb -f infra/mongodb-config.yaml -n openim --create-namespace

        # Install Redis
        helm install im-redis infra/redis -f infra/redis-config.yaml -n openim --create-namespace

      continue-on-error: true

    - name: Install OpenIM Services
      run: |
        # OpenIM Server Service 安装
        helm install openimserver ./charts/openim-server/ -f k8s-open-im-server-config.yaml -f config-imserver.yaml -f notification.yaml -n openim

        # OpenIM Chat Service 安装
        helm install openimchat ./charts/openim-chat/ -f k8s-chat-server-config.yaml -f config-chatserver.yaml -n openim

        # Web Frontend 安装
        helm install imwebfront ./charts/openim-web/ -f k8s-webfront-config.yaml -n openim

        # Admin Frontend 安装
        helm install imadminfront ./charts/openim-admin/ -f k8s-adminfront-config.yaml -n openim

        sleep 60

    - name: Test Installation
      run: |
        echo "## Pods in openim Namespace" > /tmp/out.md
        echo '```markdown' >> /tmp/out.md
        kubectl get pod -n openim >> /tmp/out.md
        echo '```' >> /tmp/out.md
        echo "## Pods in All Namespaces" >> /tmp/out.md
        echo '```' >> /tmp/out.md
        kubectl get pod -A >> /tmp/out.md
        echo '```' >> /tmp/out.md

    - id: pr
      run: |
        issue=$(gh pr list --search "${{ github.sha }}" --state open --json number --jq ".[0].number")
        echo "issue=$issue" >>$GITHUB_OUTPUT
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

    - uses: mshick/add-pr-comment@v2
      with:
        issue: ${{ steps.pr.outputs.issue }}
        message: |
          **Howdie!**
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

    - name: Comment PR with message
      uses: thollander/actions-comment-pull-request@v2
      id: nrt_message
      with:
        message: |
          Current branch is `${{ github.head_ref }}`.
          _(execution **${{ github.run_id }}** / attempt **${{ github.run_attempt }}**)_
        comment_tag: nrt_message
        reactions: eyes, rocket
        mode: recreate
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

    - name: Comment PR with message that will be deleted
      uses: thollander/actions-comment-pull-request@v2
      with:
        message: |
          This PR is being built... 
        comment_tag: nrt_message_delete
        reactions: eyes
        mode: delete
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

    - name: Comment PR with file
      uses: thollander/actions-comment-pull-request@v2
      with:
        filePath: /tmp/out.md
        comment_tag: nrt_file
        reactions: eyes, rocket
        mode: recreate
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

    - name: Do not comment PR if not exists
      uses: thollander/actions-comment-pull-request@v2
      with:
        message: Should not be printed
        comment_tag: nrt_create_if_not_exists
        create_if_not_exists: false
      env:
        GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}

    - name: Check outputs
      run: |
        echo "id : ${{ steps.nrt_message.outputs.id }}"
        echo "body : ${{ steps.nrt_message.outputs.body }}"
        echo "html_url : ${{ steps.nrt_message.outputs.html_url }}"

    - name: Cleanup
      if: always()
      run: |
        kind delete cluster
